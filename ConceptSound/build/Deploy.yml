- pipeline: "Deploy copy"
  on: "CLICK"
  refs:
  - "refs/heads/main"
  fail_on_prepare_env_warning: true
  actions:
  - action: "build ionic"
    type: "BUILD"
    docker_image_name: "library/openjdk"
    docker_image_tag: "11"
    execute_commands:
    - "#Install Android SDK"
    - ""
    - "#Buddy"
    - "export ANDROID_HOME=\"/opt/android/sdk/\""
    - "export PATH=$PATH:/opt/android/sdk/cmdline-tools/tools/bin"
    - "export PATH=$PATH:/opt/gradle/gradle-4.7/bin"
    - "if [ ! -d \"$ANDROID_HOME/cmdline-tools\" ]; then"
    - " curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
    - " unzip sdk.zip"
    - " rm sdk.zip"
    - " mkdir \"$ANDROID_HOME/cmdline-tools\""
    - " mv cmdline-tools \"$ANDROID_HOME/cmdline-tools/tools\""
    - " yes | \"$ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager\" --licenses"
    - "fi"
    - "#Buddy"
    - ""
    - "cd ConceptSound"
    - "npm i --force"
    - "if [ ! -d \"android\" ]; then"
    - "    ionic cap add android"
    - "fi"
    - "if [ ! -d \"ios\" ]; then"
    - "    ionic cap add ios"
    - "fi"
    - "ionic cap sync ios"
    - "ionic cap sync android"
    setup_commands:
    - "# install gradle"
    - "apt-get update && apt-get install -y zip"
    - "curl -L -Of https://services.gradle.org/distributions/gradle-4.7-bin.zip"
    - "mkdir /opt/gradle"
    - "unzip -d /opt/gradle gradle-4.7-bin.zip"
    - "# install nodejs"
    - "curl -sL https://deb.nodesource.com/setup_18.x | bash -"
    - "apt-get install -y nodejs"
    - "npm install -g @ionic/cli@latest"
    cached_dirs:
    - "/root/.gradle"
    - "/opt/android/sdk"
    shell: "BASH"
  - action: "set app metadata"
    type: "BUILD"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "20.04"
    execute_commands:
    - "manifest_file=\"./ConceptSound/android/app/src/main/AndroidManifest.xml\""
    - "permissions_file=\"./ConceptSound/build/AndroidPermissions.xml\""
    - ""
    - "start_line=$(( $(grep -n \"<!-- Permissions -->\" \"$manifest_file\" | cut -d ':' -f 1) + 1 ))"
    - "sed -i \"${start_line},\\$d\" \"$manifest_file\""
    - ""
    - "cat \"$permissions_file\" >> \"$manifest_file\""
    - "echo \"</manifest>\" >> \"$manifest_file\""
    - ""
    - "cp ./ConceptSound/build/AndroidAppName.xml ./ConceptSound/android/app/src/main/res/values/strings.xml"
    - "cp ./ConceptSound/build/IosMetadata.xml ./ConceptSound/ios/App/App/Info.plist"
    shell: "BASH"
  - action: "build android"
    type: "BUILD"
    docker_image_name: "library/openjdk"
    docker_image_tag: "17"
    execute_commands:
    - "export ANDROID_HOME=\"/opt/android/sdk\""
    - "export PATH=$PATH:/opt/android/sdk/cmdline-tools/tools/bin"
    - "if [ ! -d \"$ANDROID_HOME/cmdline-tools\" ]; then"
    - " curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
    - " unzip sdk.zip"
    - " rm sdk.zip"
    - " mkdir \"$ANDROID_HOME/cmdline-tools\""
    - " mv cmdline-tools \"$ANDROID_HOME/cmdline-tools/tools\""
    - " yes | \"$ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager\" --licenses"
    - "fi"
    - "cd ConceptSound/android"
    - "chmod +x gradlew"
    - "#./gradlew assembleDebug"
    - "./gradlew assembleRelease"
    setup_commands:
    - "microdnf install unzip"
    - "microdnf install findutils"
    cached_dirs:
    - "/root/.gradle"
    - "/opt/android/sdk"
    shell: "BASH"
  - action: "build ios"
    type: "NATIVE_BUILD_MAC"
    commands:
    - "cd ConceptSound/ios/App"
    - "pod install"
    - "xcodebuild -workspace App.xcworkspace -scheme App -sdk iphoneos CODE_SIGNING_ALLOWED=\"NO\""
    - "rm -rf Payload"
    - "mkdir Payload"
    - "cp -r /Users/buddy/Library/Developer/Xcode/DerivedData/App-gyxzrmpigtdrotczufphyfiraaoe/Build/Products/Debug-iphoneos/App.app ./Payload/"
    - "rm -rf concept_sound-release_unsigned.*"
    - "zip -r concept_sound-release_unsigned.zip Payload"
    - "mv concept_sound-release_unsigned.zip concept_sound-release_unsigned.ipa"
    shell: "BASH"
    xcode_version: "14.3.1"
  - action: "copy installers"
    type: "BUILD"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "20.04"
    execute_commands:
    - "cp ./ConceptSound/android/app/build/outputs/apk/release/app-release-unsigned.apk ./ConceptSound.apk"
    - "cp ./ConceptSound/ios/App/concept_sound-release_unsigned.ipa ./concept_sound-release_unsigned.ipa"
    setup_commands:
    - "apt-get update && apt-get -y install git"
    shell: "BASH"
  - action: "sign android"
    type: "BUILD"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "20.04"
    execute_commands:
    - "java -jar /usr/bin/apksigner sign --ks ./ConceptSound/build/app.keystore --ks-pass pass:Qoncept ./ConceptSound.apk"
    setup_commands:
    - "apt-get update && apt-get -y install apksigner"
    shell: "BASH"
  - action: "Push to git@github.com:mjakobsche/PracaDyplomowa.git"
    type: "PUSH"
    git_auth_mode: "ENV_KEY"
    env_key: "secure!AYPe+qrTh41BZCpFcwpojA==.9ovwWyfny9PTyIzu1pjTrA=="
    push_url: "git@github.com:mjakobsche/PracaDyplomowa.git"
    comment: "deployment [ 1.$BUDDY_EXECUTION_ID ]"
